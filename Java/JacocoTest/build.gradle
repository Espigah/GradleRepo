


//allprojects {
	 apply plugin: "maven"
	apply plugin: 'base'
	apply plugin: 'java'
	apply plugin: 'application'
	apply plugin: 'jacoco'
	
	mainClassName = 'com.company.Main'
	sourceCompatibility = 1.5
	version = '1.0'
	buildDir = "out"
	
    repositories {
        mavenLocal()
		mavenCentral()
    }
 
    jacoco {
        toolVersion = '0.7.1.201405082137'
		reportsDir = file("$buildDir/reports/jacoco")
    }
	
	dependencies {
		testCompile group: 'junit', name: 'junit', version: '4.11'
	}	
	
	test {
		testLogging {
			events 'started', 'passed'
		}
		ignoreFailures = true
		jacoco {
			append = false      
			destinationFile = file("$buildDir/reports/jacoco/jacocoTest.exec")
			classDumpFile = file("$buildDir/reports/jacoco/classpathdumps")			
		}
	}
	
	jacocoTestReport {	
		  
		group = "Reporting"
		description = "Generate Jacoco coverage reports after running tests."
		additionalSourceDirs = files(sourceSets.main.allJava.srcDirs)
			
		reports {
			xml{
				enabled true
				//Following value is a file
				destination "${buildDir}/reports/jacoco/xml/jacoco.xml"
			}
			csv.enabled false
			html{
				enabled true
				//Following value is a folder
				destination "${buildDir}/reports/jacoco/html"
			}
		}
	}
//}

//subprojects {

	jar {
		baseName = 'junit-test-gradle'
		version =  '0.1.0'
		from configurations.compile.collect {zipTree it} 
		manifest.attributes "Main-Class" : "com.company.Main"
	}
	sourceSets {
		main {
			java {
				srcDir 'src/main'
			}
		}
		test {
			java {
				srcDir 'src/test'
			}
		}
	}
//}


task wrapper(type: Wrapper) {
    gradleVersion = '2.2'
}





task jacocoRootReport(type: org.gradle.testing.jacoco.tasks.JacocoReport) {
    dependsOn = allprojects.test
    sourceDirectories = files(subprojects.sourceSets.main.allSource.srcDirs)
    classDirectories =  files(subprojects.sourceSets.main.output)
    executionData = files(allprojects.jacocoTestReport.executionData)
    
}